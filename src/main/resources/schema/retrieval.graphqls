type Retrieval {
    "Container element which collects all information static data"
    knowledge: Knowledge
    "Container element which collects all information about runtime data"
    experience: Experience
}

type Knowledge {
    # TODO add users()
    # TODO add user(id)

    # TODO add tenants()
    # TODO add tenant(id)

    # TODO add apiKeys()
    # TODO add apiKey(id) maybe?

    identities(limit: Int, offset: Int): [Identity]
    identity(identityId: Uuid): Identity
    intents(identityId: Uuid, limit: Int, offset: Int): [Intent]
    intent(identityId: Uuid, reference: Uuid): Intent
    prompts(identityId: Uuid, limit: Int, offset: Int): [Prompt]
    prompt(identityId: Uuid, reference: Uuid): Prompt
    fulfilments(identityId: Uuid, limit: Int, offset: Int): [Fulfilment]
    fulfilment(identityId: Uuid, reference: Uuid): Fulfilment
    statements(identityId: Uuid, limit: Int, offset: Int): [Statement]
    statement(identityId: Uuid, reference: Uuid): Statement
    codes(identityId: Uuid, limit: Int, offset: Int): [Code]
    code(identityId: Uuid, reference: Uuid): Code
    behaviours(identityId: Uuid, limit: Int, offset: Int): [Behaviour]
    behaviour(identityId: Uuid, reference: Uuid): Behaviour
    edges(source: Uuid, limit: Int, offset: Int): [Edge]
    edge(source: Uuid, target: Uuid): Edge
}

"Container type for runtime information"
type Experience {
    behaviourExecutions: [BehaviourExecution]
    behaviourNodeExecutions: [BehaviourNodeExecution]
}
