"""
This type contains all preservation sensor impulses which are used to support
read/write/delete memory functions in gaia.
"""
type Preservation {
    create: CreateKnowledge
    update: UpdateKnowledge
    delete: DeleteKnowledge
    connect: ConnectKnowledge
}

type ConnectKnowledge {
    node(nodeId: Uuid!): ConnectNodeKnowledge
}

type ConnectNodeKnowledge {
    append(impulse: ConnectAppendNodeImpulse): ConnectNodeAppendedImpulse
    remove(impulse: ConnectRemoveNodeImpulse): ConnectNodeRemovedImpulse

    set(impulse: ConnectSetNodeImpulse): ConnectNodeSetImpulse
    unset(impulse: ConnectUnsetNodeImpulse): ConnectNodeUnsetImpulse
}

enum EdgeType {
    TenantIdentity
    Supervisor
    IdentityNerSkill
    IdentityErrorStatement
    IdentityUnknownBehaviour
    IdentityDiscontinuableStatement
    IdentityWelcomeBehaviour
    IdentityIntentDetectionSkill
    UserRole
    ApiKeyRole
    IdentityDisambiguationBehaviour
}

type CreateKnowledge {
    "creates a list of identities with the given specifications"
    identities(impulses: [CreateIdentityImpulse]): [CreatedIdentityImpulse]
    "creates a list of tenants with the given specifications"
    tenants(impulses: [CreateTenantImpulse]): [CreatedTenantImpulse]
    "creates a list of users with the given specifications"
    users(impulses: [CreateUserImpulse]): [CreatedUserImpulse]
    "creates a list of api keys with the given specifications"
    apiKeys(impulses: [CreateApiKeyImpulse]): [CreatedApiKeyImpulse]
    "creates a list of roles with the given specifications"
    roles(impulses: [CreateRoleImpulse]): [CreatedRoleImpulse]
    "creates a list of intents with the given specifications"
    intents(impulses: [CreateIntentImpulse]): [CreatedIntentImpulse]
    "creates a list of prompts with the given specifications"
    prompts(impulses: [CreatePromptImpulse]): [CreatedPromptImpulse]
    "creates a list of statements with the given specifications"
    statements(impulses: [CreateStatementImpulse]): [CreatedStatementImpulse]
    "creates a list of fulfilments with the given specifications"
    fulfilments(impulses: [CreateFulfilmentImpulse]): [CreatedFulfilmentImpulse]
    "creates a list of behaviours with the given specifications"
    behaviours(impulses: [CreateBehaviourImpulse]): [CreatedBehaviourImpulse]
    "creates a list of codes with the given specifications"
    codes(impulses: [CreateCodeImpulse]): [CreatedCodeImpulse]
    "creates a list of edges with the given specifications"
    edges(impulses: [CreateEdgeImpulse]): [CreatedEdgeImpulse]
    "creates a list of skills with the given specifications"
    skills(impulses: [CreateSkillImpulse]): [CreatedSkillImpulse]
    "creates a list of skill provisions with the given specifications"
    skillProvisions(impulses: [CreateSkillProvisionImpulse]): [CreatedSkillProvisionImpulse]
}
type UpdateKnowledge {
    "updates a list of identities with the given specifications"
    identities(impulses: [UpdateIdentityImpulse]): [UpdatedIdentityImpulse]
    "updates a list of tenants with the given specifications"
    tenants(impulses: [UpdateTenantImpulse]): [UpdatedTenantImpulse]
    "updates a list of users with the given specifications"
    users(impulses: [UpdateUserImpulse]): [UpdatedUserImpulse]
    "updates a list of api keys with the given specifications"
    apiKeys(impulses: [UpdateApiKeyImpulse]): [UpdatedApiKeyImpulse]
    "updates a list of roles with the given specifications"
    roles(impulses: [UpdateRoleImpulse]): [UpdatedRoleImpulse]
    "updates a list of intents with the given specifications"
    intents(impulses: [UpdateIntentImpulse]): [UpdatedIntentImpulse]
    "updates a list of prompts with the given specifications"
    prompts(impulses: [UpdatePromptImpulse]): [UpdatedPromptImpulse]
    "updates a list of statements with the given specifications"
    statements(impulses: [UpdateStatementImpulse]): [UpdatedStatementImpulse]
    "updates a list of fulfilments with the given specifications"
    fulfilments(impulses: [UpdateFulfilmentImpulse]): [UpdatedFulfilmentImpulse]
    "updates a list of behaviours with the given specifications"
    behaviours(impulses: [UpdateBehaviourImpulse]): [UpdatedBehaviourImpulse]
    "updates a list of codes with the given specifications"
    codes(impulses: [UpdateCodeImpulse]): [UpdatedCodeImpulse]
    "updates a list of skills with the given specifications"
    skills(impulses: [UpdateSkillImpulse]): [UpdatedSkillImpulse]
    "updates a list of skill provisions with the given specifications"
    skillProvisions(impulses: [UpdateSkillProvisionImpulse]): [UpdatedSkillProvisionImpulse]
}
type DeleteKnowledge {
    "deletes a list of identities with the given specifications"
    identities(impulses: [DeleteIdentityImpulse]): [DeletedIdentityImpulse]
    "deletes a list of tenants with the given specifications"
    tenants(impulses: [DeleteTenantImpulse]): [DeletedTenantImpulse]
    "deletes a list of users with the given specifications"
    users(impulses: [DeleteUserImpulse]): [DeletedUserImpulse]
    "deletes a list of api keys with the given specifications"
    apiKeys(impulses: [DeleteApiKeyImpulse]): [DeletedApiKeyImpulse]
    "deletes a list of roles with the given specifications"
    roles(impulses: [DeleteRoleImpulse]): [DeletedRoleImpulse]
    "deletes a list of intents with the given specifications"
    intents(impulses: [DeleteIntentImpulse]): [DeletedIntentImpulse]
    "deletes a list of prompts with the given specifications"
    prompts(impulses: [DeletePromptImpulse]): [DeletedPromptImpulse]
    "deletes a list of statements with the given specifications"
    statements(impulses: [DeleteStatementImpulse]): [DeletedStatementImpulse]
    "deletes a list of fulfilments with the given specifications"
    fulfilments(impulses: [DeleteFulfilmentImpulse]): [DeletedFulfilmentImpulse]
    "deletes a list of behaviours with the given specifications"
    behaviours(impulses: [DeleteBehaviourImpulse]): [DeletedBehaviourImpulse]
    "deletes a list of codes with the given specifications"
    codes(impulses: [DeleteCodeImpulse]): [DeletedCodeImpulse]
    "deletes a list of edges with the given specifications"
    edges(impulses: [DeleteEdgeImpulse]): [DeletedEdgeImpulse]
    "deletes a list of skills with the given specifications"
    skills(impulses: [DeleteSkillImpulse]): [DeletedSkillImpulse]
    "deletes a list of skill provisions with the given specifications"
    skillProvisions(impulses: [DeleteSkillProvisionImpulse]): [DeletedSkillProvisionImpulse]
}

"The specification to create an identity instance"
input CreateIdentityImpulse {
    tenantId: String!
    qualifier: String!
    availableLanguages: Struct!
    languageOrder: [String]
}
"The specification to update an identity instance"
input UpdateIdentityImpulse {
    identityId: Uuid!
    tenantId: String!
    qualifier: String!
    availableLanguages: Struct!
    languageOrder: [String]

}
"The specification to delete an identity instance"
input DeleteIdentityImpulse {
    identityId: Uuid!
}

"Impulse which indicates the result of a create identity impulse"
type CreatedIdentityImpulse implements Impulse {
    id: Uuid!
    "the identity instance"
    data: Identity
}
"Impulse which indicates the result of a update identity impulse"
type UpdatedIdentityImpulse implements Impulse {
    id: Uuid!
    "the identity instance"
    data: Identity
}
"Impulse which indicates the result of a delete identity impulse"
type DeletedIdentityImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}

type UserKeyOne {
    userId: Uuid
}
"The specification to create an user instance"
input CreateUserImpulse {
    username: String!
    email: String
    firstName: String
    lastName: String
    password: String!
}
"The specification to update a user instance"
input UpdateUserImpulse {
    userId: Uuid
    username: String
    email: String
    firstName: String
    lastName: String
    password: String
}
"The specification to delete a user instance"
input DeleteUserImpulse {
    userId: Uuid!
}
"Impulse which indicates the result of a create user impulse"
type CreatedUserImpulse implements Impulse {
    id: Uuid!
    data: User
}
"Impulse which indicates the result of a update user impulse"
type UpdatedUserImpulse implements Impulse {
    id: Uuid!
    data: User
}
"Impulse which indicates the result of a delete user impulse"
type DeletedUserImpulse implements Impulse {
    id: Uuid!
    data: UserKeyOne
}

type ApiKeyKeyOne {
    apiKeyId: Uuid
}
"The specification to create an api key instance"
input CreateApiKeyImpulse {
    name: String!
    description: String
    enabled: Boolean
}
"The specification to update an apiKey instance"
input UpdateApiKeyImpulse {
    apiKeyId: Uuid!
    secret: String
    name: String!
    description: String
    enabled: Boolean
}
"The specification to delete an api key instance"
input DeleteApiKeyImpulse {
    apiKeyId: Uuid!
}
"Impulse which indicates the result of a create api key impulse"
type CreatedApiKeyImpulse implements Impulse {
    id: Uuid!
    data: CreatedApiKey
}
"Impulse which indicates the result of a update api key impulse"
type UpdatedApiKeyImpulse implements Impulse {
    id: Uuid!
    data: ApiKey
}
"Impulse which indicates the result of a delete api key impulse"
type DeletedApiKeyImpulse implements Impulse {
    id: Uuid!
    data: ApiKeyKeyOne
}

type RoleKeyOne {
    tenantId: Uuid
    roleId: Uuid
}
"The specification to create a role instance"
input CreateRoleImpulse {
    tenantId: Uuid!
    name: String!
    permissions: [String]
}
"The specification to update a role instance"
input UpdateRoleImpulse {
    tenantId: Uuid!
    roleId: Uuid!
    name: String
    permissions: [String]
}
"The specification to delete a role instance"
input DeleteRoleImpulse {
    tenantId: Uuid!
    roleId: Uuid!
}
"Impulse which indicates the result of a create role impulse"
type CreatedRoleImpulse implements Impulse {
    id: Uuid!
    data: Role
}
"Impulse which indicates the result of a update role impulse"
type UpdatedRoleImpulse implements Impulse {
    id: Uuid!
    data: Role
}
"Impulse which indicates the result of a delete role impulse"
type DeletedRoleImpulse implements Impulse {
    id: Uuid!
    data: RoleKeyOne
}

"This entity represents the output of a delete tenant impulse"
type TenantKeyOne {
    tenantId: Uuid
    reference: Uuid
}

"The specification to create a tenant"
input CreateTenantImpulse {
    qualifier: String!
}
"The specification to update a tenant"
input UpdateTenantImpulse {
    tenantId: Uuid!
    qualifier: String!
}
"The specification to delete a tenant"
input DeleteTenantImpulse {
    tenantId: Uuid!
}
"Impulse which indicates the result of a create Tenant impulse"
type CreatedTenantImpulse implements Impulse {
    id: Uuid!
    "the Tenant instance"
    data: Tenant
}
"Impulse which indicates the result of a update Tenant impulse"
type UpdatedTenantImpulse implements Impulse {
    id: Uuid!
    "the Tenant instance"
    data: Tenant
}
"Impulse which indicates the result of a delete Tenant impulse"
type DeletedTenantImpulse implements Impulse {
    id: Uuid!
    data: TenantKeyOne
}

"The specification to create an intent instance"
input CreateIntentImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to update an intent instance"
input UpdateIntentImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to delete an intent instance"
input DeleteIntentImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create intent impulse"
type CreatedIntentImpulse implements Impulse {
    id: Uuid!
    "the intent instance"
    data: Intent
}
"Impulse which indicates the result of a update intent impulse"
type UpdatedIntentImpulse implements Impulse {
    id: Uuid!
    "the intent instance"
    data: Intent
}
"Impulse which indicates the result of a delete intent impulse"
type DeletedIntentImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}

"The specification to create a prompt instance"
input CreatePromptImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to update a prompt instance"
input UpdatePromptImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to delete a prompt instance"
input DeletePromptImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create prompt impulse"
type CreatedPromptImpulse implements Impulse {
    id: Uuid!
    "the prompt instance"
    data: Prompt
}
"Impulse which indicates the result of a update prompt impulse"
type UpdatedPromptImpulse implements Impulse {
    id: Uuid!
    "the prompt instance"
    data: Prompt
}
"Impulse which indicates the result of a delete prompt impulse"
type DeletedPromptImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}

"The specification to create a statement instance"
input CreateStatementImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to update a statement instance"
input UpdateStatementImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to delete a statement instance"
input DeleteStatementImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create statement impulse"
type CreatedStatementImpulse implements Impulse {
    id: Uuid!
    "the statement instance"
    data: Statement
}
"Impulse which indicates the result of a update statement impulse"
type UpdatedStatementImpulse implements Impulse {
    id: Uuid!
    "the statement instance"
    data: Statement
}
"Impulse which indicates the result of a delete statement impulse"
type DeletedStatementImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}
"The specification to create a fulfilment instance"
input CreateFulfilmentImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to update a fulfilment instance"
input UpdateFulfilmentImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    utterance: Struct!
    labelList: [String]
}
"The specification to delete a fulfilment instance"
input DeleteFulfilmentImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create fulfilment impulse"
type CreatedFulfilmentImpulse implements Impulse {
    id: Uuid!
    "the fulfilment instance"
    data: Fulfilment
}
"Impulse which indicates the result of a update fulfilment impulse"
type UpdatedFulfilmentImpulse implements Impulse {
    id: Uuid!
    "the fulfilment instance"
    data: Fulfilment
}
"Impulse which indicates the result of a delete fulfilment impulse"
type DeletedFulfilmentImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}
"The specification to create a behaviour instance"
input CreateBehaviourImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    behaviour: String!
    labelList: [String]
}
"The specification to update a behaviour instance"
input UpdateBehaviourImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    behaviour: String!
    labelList: [String]
}
"The specification to delete a behaviour instance"
input DeleteBehaviourImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create behaviour impulse"
type CreatedBehaviourImpulse implements Impulse {
    id: Uuid!
    "the behaviour instance"
    data: Behaviour
}
"Impulse which indicates the result of a update behaviour impulse"
type UpdatedBehaviourImpulse implements Impulse {
    id: Uuid!
    "the behaviour instance"
    data: Behaviour
}
"Impulse which indicates the result of a delete behaviour impulse"
type DeletedBehaviourImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}
"The specification to create a code instance"
input CreateCodeImpulse {
    identityId: Uuid!
    qualifier: String!
    appendent: String
    code: Struct!
    type: String!
    labelList: [String]
}
"The specification to update a code instance"
input UpdateCodeImpulse {
    identityId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    code: Struct!
    type: String!
    labelList: [String]
}
"The specification to delete a code instance"
input DeleteCodeImpulse {
    identityId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create code impulse"
type CreatedCodeImpulse implements Impulse {
    id: Uuid!
    "the code instance"
    data: Code
}
"Impulse which indicates the result of a update code impulse"
type UpdatedCodeImpulse implements Impulse {
    id: Uuid!
    "the code instance"
    data: Code
}
"Impulse which indicates the result of a delete code impulse"
type DeletedCodeImpulse implements Impulse {
    id: Uuid!
    data: KeyOne
}

"This entity represents the output of an edge delete impulse"
type EdgeKeyOne {
    source: Uuid
    edgeId: Uuid
}
"The specification to create an edge instance"
input CreateEdgeImpulse {
    source: Uuid!
    target: Uuid!
    type: String!
    weight: Float!
    properties: Struct
}
"The specification to delete an edge instance"
input DeleteEdgeImpulse {
    source: Uuid!
    edgeId: Uuid!
}
"Impulse which indicates the result of a create edge impulse"
type CreatedEdgeImpulse implements Impulse {
    id: Uuid!
    "the edge instance"
    data: Edge
}
"Impulse which indicates the result of a delete edge impulse"
type DeletedEdgeImpulse implements Impulse {
    id: Uuid!
    data: EdgeKeyOne
}
"This entity represents the output of a delete impulse"
type KeyOne {
    identityId: Uuid
    reference: Uuid
}

"The specification to create a skill instance"
input CreateSkillImpulse {
    tenantId: Uuid!
    qualifier: String!
    appendent: String
    labelList: [String]
    repositoryUri: String!
    repositoryType: String!
}
"The specification to update a Skill instance"
input UpdateSkillImpulse {
    tenantId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    labelList: [String]
    repositoryUri: String!
    repositoryType: String!
}
"The specification to delete a Skill instance"
input DeleteSkillImpulse {
    tenantId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create Skill impulse"
type CreatedSkillImpulse implements Impulse {
    id: Uuid!
    "the Skill instance"
    data: Skill
}
"Impulse which indicates the result of a update Skill impulse"
type UpdatedSkillImpulse implements Impulse {
    id: Uuid!
    "the Skill instance"
    data: Skill
}
"Impulse which indicates the result of a delete Skill impulse"
type DeletedSkillImpulse implements Impulse {
    id: Uuid!
    data: TenantKeyOne
}

"The specification to create a SkillProvision instance"
input CreateSkillProvisionImpulse {
    tenantId: Uuid!
    qualifier: String!
    appendent: String
    labelList: [String]
    version: String!
    skillRef: String!
    cpu: Int
    memory: Int
    replicas: Int
    enabled: Boolean!
    bootstrapTimeout: Int
    environment: Struct

}
"The specification to update a SkillProvision instance"
input UpdateSkillProvisionImpulse {
    tenantId: Uuid!
    reference: Uuid!
    qualifier: String!
    appendent: String
    labelList: [String]
    version: String!
    skillRef: String!
    cpu: Int
    memory: Int
    replicas: Int
    enabled: Boolean!
    bootstrapTimeout: Int
    environment: Struct
}
"The specification to delete a SkillProvision instance"
input DeleteSkillProvisionImpulse {
    tenantId: Uuid!
    reference: Uuid!
}
"Impulse which indicates the result of a create SkillProvision impulse"
type CreatedSkillProvisionImpulse implements Impulse {
    id: Uuid!
    "the SkillProvision instance"
    data: SkillProvision
}
"Impulse which indicates the result of a update SkillProvision impulse"
type UpdatedSkillProvisionImpulse implements Impulse {
    id: Uuid!
    "the SkillProvision instance"
    data: SkillProvision
}
"Impulse which indicates the result of a delete SkillProvision impulse"
type DeletedSkillProvisionImpulse implements Impulse {
    id: Uuid!
    data: TenantKeyOne
}
"The specification to set an edge for a node"
input ConnectSetNodeImpulse {
    type: EdgeType!
    target: Uuid!
    properties: Struct
    weight: Float
}
"The specification to unset edges of a certain type for a node"
input ConnectUnsetNodeImpulse {
    type: EdgeType!
}
"The specification to append an edge to a node"
input ConnectAppendNodeImpulse {
    type: EdgeType!
    target: Uuid!
    properties: Struct
    weight: Float
}
"The specification to remove an edge of a certain type with a certain target from a node"
input ConnectRemoveNodeImpulse {
    type: EdgeType!
    target: Uuid!
}
"Impulse which indicates the result setting a node connection"
type ConnectNodeSetImpulse implements Impulse {
    id: Uuid!
    "edges removed before setting the new edge"
    removedEdges: [EdgeKeyOne]
    "edge created by this request"
    newEdge: Edge
}
"Impulse which indicates the result unsetting a node connection"
type ConnectNodeUnsetImpulse implements Impulse {
    id: Uuid!
    "edges removed by this request"
    removedEdges: [EdgeKeyOne]
}
"Impulse which indicates the result appending a node connection"
type ConnectNodeAppendedImpulse implements Impulse {
    id: Uuid!
    "edge created by this request"
    newEdge: Edge
}
"Impulse which indicates the result removing a node connection"
type ConnectNodeRemovedImpulse implements Impulse {
    id: Uuid!
    "edges removed by this request"
    removedEdges: [EdgeKeyOne]
}
