from typing import Callable
from graphql.request.type.Query import Query
from graphql.request.type.Mutation import Mutation
from graphql.request.type.Subscription import Subscription


class #capitalize($name)Request(list):

#if($hasQuery)
    #tab(4)@staticmethod
    #tab(4)def query(config: Callable[[Query], None]):
    #tab(8)request = Query()
    #tab(8)config(request)
    #tab(8)return request
#end

#if($hasMutation)
    #tab(4)@staticmethod
    #tab(4)def mutation(config: Callable[[Mutation], None]):
    #tab(8)request = Mutation()
    #tab(8)config(request)
    #tab(8)return request
#end

#if($hasSubscription)
    #tab(4)@staticmethod
    #tab(4)def subscription(config: Callable[[Subscription], None]):
    #tab(8)request = Subscription()
    #tab(8)config(request)
    #tab(8)return request
#end
#macro(capitalize $str)#*
    *#${str.substring(0, 1).toUpperCase()}${str.substring(1)}##
#end
#macro(tab $indent)#*
    *#${tab.invoke($indent)}##
#end
#macro(print $text)#*
    *#${print.invoke($text)}##
#end
