#parse("/template/javascript/RequestMacros.vm")
import VariableRegistry from "../api/VariableRegistry";

// AUTOGENERATED CLASS. DO NOT MODIFY.
export abstract class #capitalize($name)Request extends #print("Array<(_:VariableRegistry) => string>") {
#tab(4)public static query(config:(_:#capitalize($name)QueryRequest) => void) {
#tab(8)const request = new #capitalize($name)QueryRequest();
#tab(8)config(request);
#tab(8)return request;
#tab(4)}
#tab(4)abstract getStatement():[string, {}];
}

export class #capitalize($name)QueryRequest extends #capitalize($name)Request {$newLine#*
*##tab(4)public preprocessors:Array<string> = new Array<string>();$newLine#*
*##foreach($ast in $list)#*
    *##if($ast.class.simpleName.equals("Query"))#*
        *##foreach($renderable in $ast.list)#*
            *##renderEntityAsField($renderable 4)#*
        *##end#*
    *##end##
#end##

#tab(4)public getStatement = ():[string, {}] #print("=>") {
#tab(8)const registry = new VariableRegistry();
#tab(8)const fields = this.map((e) => e(registry)).join(" ");
#tab(8)const statement = `query $name(${registry.getDatatypes().join(", ")}) { ${fields} }`;
#tab(8)return [statement, registry.getVariables()]
#tab(4)}
}

#foreach($ast in $list)#*
    *##if($ast.class.simpleName.equals("Query"))#*
        *##foreach($renderable in $ast.list)#*
            *##renderEntity($renderable "Query")#*
        *##end#*
    *##end##
#end##
export class #capitalize($name)MutationRequest extends #capitalize($name)Request {
public preprocessors:Array<string> = new Array<string>();
#tab(4)public getStatement():[string, {}] {
#tab(8)const registry = new VariableRegistry();
#tab(8)const fields = this.map((e) => e(registry)).join(" ");
#tab(8)const statement = `query $name(${registry.getDatatypes().join(", ")}) { ${fields} }`;
#tab(8)return [statement, registry.getVariables()]
#tab(4)}
}
