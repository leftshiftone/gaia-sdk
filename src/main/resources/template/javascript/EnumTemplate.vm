export enum ${ast.name} {
#foreach($value in $ast.values)
    ${value}#if($foreach.hasNext), #end
#end
}


export function get${ast.name}EnumClass(enumValue: ${ast.name}): any {
    switch (enumValue) {
        #foreach($value in $ast.values)
        case ${ast.name}.${value}:
            return new ${value}();
        #end
    }
}

#foreach($value in $ast.values)
export class $value {
    public _typeName = "${ast.name}";
    public _isWrapper = true;
    public _wrappedValue = "${value}";

    constructor() {}
}
#end

