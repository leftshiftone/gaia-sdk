import {ClientOptions, HttpTransporter, ITransporter} from '..';
import {#capitalize($name)Client} from './#capitalize($name)Client';
import {HMACCredentials} from "../api/#capitalize($name)Credentials";

export class #capitalize($name)ClientBuilder {
#tab(4)private transporter: ITransporter;
#tab(4)private apiKey?: string;
#tab(4)private secret?: string;

#tab(4)private constructor(transporter: ITransporter) {
#tab(8)this.transporter = transporter;
#tab(4)}

#tab(4)public static http(url: string) {
#tab(8)return new #capitalize($name)ClientBuilder(new HttpTransporter(url));
#tab(4)}

#tab(4)public withApiKey(apiKey: string) {
#tab(8)this.apiKey = apiKey;
#tab(8)return this;
#tab(4)}

#tab(4)public withSecret(secret: string) {
#tab(8)this.secret = secret;
#tab(8)return this;
#tab(4)}

#tab(4)public build() {
#tab(8)const options = new ClientOptions(new HMACCredentials(this.apiKey!, this.secret!));
#tab(8)return new #capitalize($name)Client(options, this.transporter);
#tab(4)}

}
#macro(capitalize $str)#*
    *#${str.substring(0, 1).toUpperCase()}${str.substring(1)}##
#end
#macro(tab $indent)#*
    *#${tab.invoke($indent)}##
#end
#macro(print $text)#*
    *#${print.invoke($text)}##
#end
