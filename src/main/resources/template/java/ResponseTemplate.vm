#parse("/template/java/ResponseMacros.vm")
package gaia.sdk.$name

import com.fasterxml.jackson.annotation.JsonCreator
import com.fasterxml.jackson.annotation.JsonProperty
import java.util.Date

// AUTOGENERATED CLASS. DO NOT MODIFY.
abstract class #capitalize($name)Response {

#if ($hasQuery)##
data class #capitalize($name)QueryResponse @JsonCreator constructor(
    @JsonProperty("data") val data: Data?,
    @JsonProperty("logs") val logs: #print("Map<String, List<String>>?"),
    @JsonProperty("nluScore") val nluScore: Double?,
    @JsonProperty("nerScore") val nerScore: Double?,
    @JsonProperty("score") val score: Double?,
    @JsonProperty("errors") val errors: #print("List<String>?")): #capitalize($name)Response() {

#foreach($ast in $list)
    #renderQuery($ast)
#end
#tab(4)}
#end

#if ($hasMutation)##
data class #capitalize($name)MutationResponse @JsonCreator constructor(
    @JsonProperty("data") val data: Data?,
    @JsonProperty("logs") val logs: #print("Map<String, List<String>>?"),
    @JsonProperty("errors") val errors: #print("List<String>?")): #capitalize($name)Response() {

    #foreach($ast in $list)
        #renderMutation($ast)
    #end

#tab(4)}
#end
}
