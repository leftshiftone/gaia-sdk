#parse("/template/java/RequestMacros.vm")
package gaia.sdk.$name

import ClientOptions
import ITransporter
import HMAC
import HttpTransport
import reactor.netty.http.client.HttpClient

// AUTOGENERATED CLASS. DO NOT MODIFY.
class #capitalize($name)ClientBuilder private constructor(private val transporter: ITransporter) {

#tab(4)lateinit var apiKey: String;
#tab(4)lateinit var secret: String;

#tab(4)companion object {
#tab(8)@JvmStatic
#tab(8)@JvmOverloads
#tab(8)fun http(url: String, client: HttpClient = HttpClient.create()): #capitalize($name)ClientBuilder {
#tab(12)return #capitalize($name)ClientBuilder(HttpTransport(url, client))
#tab(8)}
#tab(8)@JvmStatic
#tab(8)fun custom(transporter: ITransporter): #capitalize($name)ClientBuilder {
#tab(12)return #capitalize($name)ClientBuilder(transporter)
#tab(8)}
#tab(4)}

#tab(4)fun withApiKey(key: String): #capitalize($name)ClientBuilder {
#tab(8)this.apiKey = key
#tab(8)return this
#tab(4)}

#tab(4)fun withSecret(secret: String): #capitalize($name)ClientBuilder {
#tab(8)this.secret = secret
#tab(8)return this
#tab(4)}

#tab(4)fun build(): #capitalize($name)Client {
#tab(8)val options = ClientOptions(apiKey, HMAC(secret))
#tab(8)return #capitalize($name)Client(options, transporter)
#tab(4)}

}
