package gaia.sdk

import gaia.sdk.api.support.HMAC
import gaia.sdk.api.transmitter.ClientOptions
import gaia.sdk.api.transmitter.ITransporter

class #capitalize($name)ClientBuilder (private val transporter: ITransporter) {

#tab(4)lateinit var apiKey: String;
#tab(4)lateinit var secret: String;
#tab(4)lateinit var bearer: String;

#tab(4)fun withApiKey(apiKey: String): #capitalize($name)ClientBuilder {
#tab(8)this.apiKey = apiKey
#tab(8)return this
#tab(4)}

#tab(4)fun withSecret(secret: String): #capitalize($name)ClientBuilder {
#tab(8)this.secret = secret
#tab(8)return this
#tab(4)}

#tab(4)fun withBearer(bearer: String): #capitalize($name)ClientBuilder {
#tab(8)this.bearer = bearer
#tab(8)return this
#tab(4)}

#tab(4)fun build(): #capitalize($name)Client {
#tab(8)val options = ClientOptions(apiKey, HMAC(secret))
#tab(8)return #capitalize($name)Client(options, transporter)
#tab(4)}

}
#macro(tab $indent)${tab.invoke($indent)}#end
#macro(print $text)${print.invoke($text)}#end
#macro(capitalize $str)${str.substring(0, 1).toUpperCase()}${str.substring(1)}#end
