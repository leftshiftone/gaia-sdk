

import VariableRegistry from "../api/VariableRegistry";

// AUTOGENERATED CLASS. DO NOT MODIFY.
export abstract class HeimdallRequest extends Array<(_:VariableRegistry) => string> {
    public static query(config:(_:HeimdallQueryRequest) => void) {
        const request = new HeimdallQueryRequest();
        config(request);
        return request;
    }
    abstract getStatement():[string, {}];
}

export class HeimdallQueryRequest extends HeimdallRequest {
    public preprocessors:Array<string> = new Array<string>();

    public getStatement = ():[string, {}] => {
        const registry = new VariableRegistry();
        const fields = this.map((e) => e(registry)).join(" ");
        const statement = `query heimdall(${registry.getDatatypes().join(", ")}) { ${fields} }`;
        return [statement, registry.getVariables()]
    }
}

export class HeimdallMutationRequest extends HeimdallRequest {
public preprocessors:Array<string> = new Array<string>();
    public getStatement():[string, {}] {
        const registry = new VariableRegistry();
        const fields = this.map((e) => e(registry)).join(" ");
        const statement = `query heimdall(${registry.getDatatypes().join(", ")}) { ${fields} }`;
        return [statement, registry.getVariables()]
    }
}
