import {ClientOptions} from '../api/ClientOptions';
import {ITransporter} from '../api/ITransporter';
import {HeimdallMutationRequest} from './HeimdallRequest';
import {HeimdallMutationResponse} from './HeimdallResponse';

// AUTOGENERATED CLASS. DO NOT MODIFY.
export class HeimdallClient {
    private options: ClientOptions;
    private transporter: ITransporter;
    private nonce = Math.random();

    constructor(options: ClientOptions, transporter: ITransporter) {
        this.options = options;
        this.transporter = transporter;
    }

    public mutationNative(statement: string, variables: Record<string, any> = {}, preprocessors: Array<string> = []): Promise<HeimdallMutationResponse> {        this.nonce += 1;        const body = {            statement,            variables,            preprocessors,            timestamp: new Date().getTime(),            nonce: this.nonce,        };        return this.transporter.transport(this.options, body);    }
    public mutation(request: HeimdallMutationRequest): Promise<HeimdallMutationResponse> {
        const [statement, variables] = request.getStatement();
        return this.mutationNative(statement, variables, request.preprocessors);
    }

}
